---
- name: (Alpine Linux) Set up NGINX Plus license
  when: ansible_facts['os_family'] == "Alpine"
  block:
    - name: Install cryptography package
      ansible.builtin.package:
        name: py3-cryptography

    - name: (Alpine Linux) Create APK directory
      ansible.builtin.file:
        path: /etc/apk
        state: directory
        mode: "0755"

    - name: (Alpine Linux) Copy NGINX Plus certificate
      ansible.builtin.copy:
        src: "{{ nginx_license['certificate'] }}"
        dest: /etc/apk/cert.pem
        decrypt: true
        mode: "0444"

    - name: (Alpine Linux) Copy NGINX Plus key
      ansible.builtin.copy:
        src: "{{ nginx_license['key'] }}"
        dest: /etc/apk/cert.key
        decrypt: true
        mode: "0444"

    - name: (Alpine Linux) Check that NGINX Plus certificate is valid
      community.crypto.x509_certificate_info:
        path: /etc/apk/cert.pem
      register: cert

    - name: (Alpine Linux) Check that NGINX Plus key is valid
      community.crypto.openssl_privatekey_info:
        path: /etc/apk/cert.key
      register: key

    - name: (Alpine Linux) Check that NGINX Plus license is valid
      ansible.builtin.assert:
        that:
          - cert.expired == false
          - cert.public_key == key.public_key
        success_msg: Your NGINX Plus license is valid!
        fail_msg: Something went wrong! Make sure your NGINX Plus license is valid!

- name: (Debian/Red Hat/SLES OSs) Set up NGINX Plus license
  when: ansible_facts['os_family'] != 'Alpine'
  block:
    - name: (Debian/Red Hat/SLES OSs) Create SSL directory
      ansible.builtin.file:
        path: /etc/ssl/nginx
        state: directory
        mode: "0755"

    - name: (Debian/Red Hat/SLES OSs) Copy NGINX Plus certificate and license key
      ansible.builtin.copy:
        src: "{{ item }}"
        dest: /etc/ssl/nginx
        decrypt: true
        mode: "0444"
      loop:
        - "{{ nginx_license['certificate'] }}"
        - "{{ nginx_license['key'] }}"

    - name: (Debian/Red Hat/SLES OSs) Install cryptography package
      ansible.builtin.package:
        name: "{{ (ansible_python['version']['major'] == 3) | ternary('python3-cryptography', 'python2-cryptography') }}"
      when: not (ansible_facts['distribution'] == "OracleLinux" and ansible_facts['distribution_major_version'] == "8")

    - name: (OracleLinux 8) Install cryptography package
      ansible.builtin.package:
        name: "python3.11-cryptography"
      when:
        - ansible_facts['distribution'] == "OracleLinux"
        - ansible_facts['distribution_major_version'] == "8"

    - name: (Debian/Red Hat/SLES OSs) Check that NGINX Plus certificate is valid
      community.crypto.x509_certificate_info:
        path: /etc/ssl/nginx/nginx-repo.crt
      register: cert

    - name: (Debian/Red Hat/SLES OSs) Check that NGINX Plus key is valid
      community.crypto.openssl_privatekey_info:
        path: /etc/ssl/nginx/nginx-repo.key
      register: key

    - name: (Debian/Red Hat/SLES OSs) Check that NGINX Plus license is valid
      ansible.builtin.assert:
        that:
          - cert.expired == false
          - cert.public_key == key.public_key
        success_msg: Your NGINX Plus license is valid!
        fail_msg: Something went wrong! Make sure your NGINX Plus license is valid!

    - name: (SLES) Create NGINX Plus license bundle
      when: ansible_facts['os_family'] == 'Suse'
      block:
        - name: (SLES) Check combined NGINX Plus license bundle exists
          ansible.builtin.stat:
            path: /etc/ssl/nginx/nginx-repo-bundle.crt
          register: bundle

        - name: (SLES) Combine NGINX Plus certificate and license key
          ansible.builtin.assemble:
            src: /etc/ssl/nginx
            dest: /etc/ssl/nginx/nginx-repo-bundle.crt
            mode: "0444"
          when: not bundle['stat']['exists']
