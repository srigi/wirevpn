---
- name: (CentOS) Install GeoIP EPEL dependency
  ansible.builtin.yum:
    name: epel-release
  when:
    - ansible_facts['distribution'] == "CentOS"
    - '"geoip" in nginx_modules'
    - nginx_install_epel_release | bool

- name: (Amazon Linux/RHEL 7) Install GeoIP2 dependency
  when:
    - (ansible_facts['distribution'] == "RedHat" and ansible_facts['distribution_major_version'] is version('7', '=='))
      or ansible_facts['distribution'] == "Amazon"
    - '"geoip2" in nginx_modules'
  block:
    - name: (Amazon Linux/RHEL 7) Check if libmaxminddb is available
      ansible.builtin.yum:
        list: available
      register: packages

    - name: (Amazon Linux/RHEL 7) Install libmaxminddb
      ansible.builtin.yum:
        name: https://rpmfind.net/linux/centos/7.9.2009/os/x86_64/Packages/libmaxminddb-1.2.0-6.el7.x86_64.rpm
      when: "'libmaxminddb' not in packages['results']"

- name: (AlmaLinux/Amazon Linux/Oracle Linux/RHEL/Rocky Linux) Install GeoIP2 and/or OpenTracing EPEL dependency
  when:
    - ansible_facts['os_family'] == "RedHat"
    - ('opentracing' in nginx_modules)
    - nginx_install_epel_release | bool
  block:
    - name: (AlmaLinux/Amazon Linux/Oracle Linux/RHEL/Rocky Linux) Import EPEL GPG key
      ansible.builtin.rpm_key:
        state: present
        key: https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-{{ ((ansible_facts['distribution'] == 'Amazon') | ternary('7', ansible_facts['distribution_major_version'])) }}

    - name: (AlmaLinux/Amazon Linux/Oracle Linux/RHEL/Rocky Linux) Install EPEL
      ansible.builtin.yum:
        name: https://dl.fedoraproject.org/pub/epel/epel-release-latest-{{ ((ansible_facts['distribution'] == 'Amazon') | ternary('7', ansible_facts['distribution_major_version'])) }}.noarch.rpm

- name: (Alpine Linux) Install Lua and Encrypted Sessions Alpine Linux 3.17 dependency
  community.general.apk:
    name: nginx-plus-module-ndk
  when:
    - nginx_type == 'plus'
    - ansible_facts['os_family'] == 'Alpine'
    - ansible_facts['distribution_version'] | regex_search('^[0-9]+\\.[0-9]+') is version('3.17', '==')
    - ('encrypted-sessions' in nginx_modules) or ('lua' in nginx_modules) or ('set-misc' in nginx_modules)

- name: Install NGINX modules
  ansible.builtin.package:
    name: "nginx-{{ (nginx_type == 'plus') | ternary('plus-', '') }}module-{{ item['name'] | default(item) }}\
          {{ (nginx_repository is not defined and ansible_facts['os_family'] == 'Alpine' and nginx_type != 'plus') | ternary('@nginx', '') }}{{ item['version'] | default('') }}"
    state: "{{ item['state'] | default('present') }}"
  loop: "{{ nginx_modules }}"
  when:
    - (item['name'] | default(item) in nginx_modules_list and nginx_type == 'opensource')
      or (item['name'] | default(item) in nginx_plus_modules_list and nginx_type == 'plus')
    - not (item['name'] | default(item) == 'brotli')
      or not (ansible_facts['os_family'] == 'Suse' and ansible_facts['distribution_major_version'] is version('12', '=='))
    - not (item['name'] | default(item) == "geoip")
      or not ((ansible_facts['os_family'] == 'FreeBSD')
      or (ansible_facts['os_family'] == 'RedHat' and ansible_facts['distribution_major_version'] is version('8', '>=')))
    - not (item['name'] | default(item) == 'geoip2')
      or not (ansible_facts['os_family'] == 'Suse')
    - not (item['name'] | default(item) == 'lua')
      or not (ansible_facts['architecture'] == 's390x')
    - not (item['name'] | default(item) == 'opentracing')
      or not (ansible_facts['os_family'] == 'Suse' and ansible_facts['distribution_major_version'] is version('12', '=='))
